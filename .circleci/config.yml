version: 2.1

# Add additional CircleCI Orbs dependencies
orbs:
  # https://circleci.com/orbs/registry/orb/circleci/kubernetes
  kubernetes: circleci/kubernetes@0.3.0
  # https://circleci.com/orbs/registry/orb/circleci/helm
  helm: circleci/helm@0.1.2
  # https://circleci.com/orbs/registry/orb/ccpgames/minikube
  minikube: ccpgames/minikube@0.0.1

jobs:
  # Run helm lint checks
  helm-lint:
    docker:
      - image: lachlanevenson/k8s-helm
    steps:
      - checkout
      - run:
          name: Prepare Helm
          command: |
            set -x
            helm init --client-only
      - run:
          name: Helm Lint Dex
          command: helm lint charts/dex
      - run:
          name: Helm Lint Dex-K8s-Authenticator
          command: helm lint charts/dex-k8s-authenticator
      - run:
          name: Helm template
          command: |
            mkdir -p /tmp/charts
            helm template --output-dir /tmp/charts charts/dex
            helm template --output-dir /tmp/charts charts/dex-k8s-authenticator
      - persist_to_workspace:
          root: /tmp/charts
          paths:
            - dex
            - dex-k8s-authenticator

  # Run Kubernetes lint checks
  k8s-lint:
    docker:
      - image: garethr/kubeval
    steps:
      - attach_workspace:
          at: /tmp/charts
      - run:
          name: K8s Kubeval Lint Check (dex)
          command: kubeval -d /tmp/charts/dex
      - run:
          name: K8s Kubeval Lint Check (dex-k8s-authenticator)
          command: kubeval -d /tmp/charts/dex-k8s-authenticator
 
  # Run helm e2e (can dex-k8s-auth talk to dex)
  helm-e2e:
    machine:
      # https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Add deps
          command: |
            set -x
            sudo apt-get update -y
            sudo apt-get install -y gettext-base
      - kubernetes/install
      - minikube/minikube-install:
          version: v1.2.0
      - run:
          name: create k8s cluster
          command: sudo -E minikube start --vm-driver=none --cpus $(nproc) --memory 4096
          environment:
            CHANGE_MINIKUBE_NONE_USER: true
      - run:
          name: enable ingress
          command: sudo minikube addons enable ingress
      - helm/install-helm-on-cluster
      - run: 
          name: generate chart overrides
          command: |
            set -x
            export CLUSTER_IP=$(minikube ip)
            envsubst < ./tests/e2e/helm/dex-overrides.yaml > /tmp/dex-overrides.yaml
            envsubst < ./tests/e2e/helm/dex-k8s-auth-overrides.yaml > /tmp/dex-k8s-auth-overrides.yaml
      - run:
          name: helm install dex
          command: helm install --debug --name dex charts/dex -f /tmp/dex-overrides.yaml
      - run:
          when: always
          name: check rollout status
          command: kubectl rollout status deploy dex -w
      - run:
          name: helm install dex-k8s-authenticator
          command: helm install --debug --name dex-k8s-authenticator charts/dex-k8s-authenticator -f /tmp/dex-k8s-auth-overrides.yaml
      - run:
          when: always
          name: check rollout status
          command: kubectl rollout status deploy dex-k8s-authenticator -w

workflows:
  version: 2
  helm:
    jobs:
      - helm-lint
      - k8s-lint:
          requires:
            - helm-lint
      - helm-e2e:
          requires:
            - helm-lint
            - k8s-lint

