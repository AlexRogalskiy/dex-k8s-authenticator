version: 2.1

# Required orbs
orbs:
  # https://circleci.com/orbs/registry/orb/circleci/kubernetes
  kubernetes: circleci/kubernetes@0.3.0
  # https://circleci.com/orbs/registry/orb/circleci/helm
  helm: circleci/helm@0.1.2
  # https://circleci.com/orbs/registry/orb/ccpgames/minikube
  minikube: ccpgames/minikube@0.0.1

jobs:
  # Run golang checks 
  golang_checks:
    docker:
      - image: circleci/golang
    steps:
      - checkout
      - run:
          name: gotestsum
          command: |
            set -x
            gotestsum
      - run:
          name: gofmt
          command: |
            set -x
            output=$(gofmt -l -e -d .)
            echo $output
            test -z $output

  # Run helm lint checks
  helm_lint:
    docker:
      - image: lachlanevenson/k8s-helm
    steps:
      - checkout
      - run:
          name: Prepare Helm
          command: |
            set -x
            helm init --client-only
      - run:
          name: Helm Lint Dex
          command: helm lint charts/dex
      - run:
          name: Helm Lint Dex-K8s-Authenticator
          command: helm lint charts/dex-k8s-authenticator
      - run:
          name: Helm template
          command: |
            mkdir -p /tmp/charts
            helm template --output-dir /tmp/charts charts/dex
            helm template --output-dir /tmp/charts charts/dex-k8s-authenticator
      - persist_to_workspace:
          root: /tmp/charts
          paths:
            - dex
            - dex-k8s-authenticator

  # Run Kubernetes lint checks
  k8s_lint:
    docker:
      - image: garethr/kubeval
    steps:
      - attach_workspace:
          at: /tmp/charts
      - run:
          name: K8s Kubeval Lint Check (dex)
          command: kubeval -d /tmp/charts/dex
      - run:
          name: K8s Kubeval Lint Check (dex-k8s-authenticator)
          command: kubeval -d /tmp/charts/dex-k8s-authenticator
 
  # Run helm e2e checks
  helm_e2e:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Add deps
          command: |
            set -x
            sudo apt-get update -y
            sudo apt-get install -y gettext-base
      - kubernetes/install
      - minikube/minikube-install:
          version: v1.2.0
      - run:
          # Create a minikube cluster to install helm charts into
          name: create k8s cluster
          command: sudo -E minikube start --vm-driver=none --cpus $(nproc) --memory 4096
          environment:
            CHANGE_MINIKUBE_NONE_USER: true
      - run:
          name: enable ingress
          command: sudo minikube addons enable ingress
      - helm/install-helm-on-cluster
      - run:
          # Build a new image locally - use the minikube docker-env so that helm can pull the image
          name: build ci image
          command: |
            eval $(minikube docker-env)
            docker build -t mintel/dex-k8s-authenticator:${CIRCLE_SHA1} .
      - run:
          # Generate helm chart overrides to use the minikube-ip and newly built image
          name: generate chart overrides
          command: |
            set -x
            export CLUSTER_IP=$(minikube ip)
            export CI_TAG=$CIRCLE_SHA1
            envsubst < ./tests/e2e/helm/dex-overrides.yaml > /tmp/dex-overrides.yaml
            envsubst < ./tests/e2e/helm/dex-k8s-auth-overrides.yaml > /tmp/dex-k8s-auth-overrides.yaml
      - run:
          name: helm install dex
          command: helm install --debug --name dex charts/dex -f /tmp/dex-overrides.yaml
      - run:
          name: check rollout status
          command: kubectl rollout status deploy dex -w
      - run:
          name: helm install dex-k8s-authenticator
          command: helm install --debug --name dex-k8s-authenticator charts/dex-k8s-authenticator -f /tmp/dex-k8s-auth-overrides.yaml
      - run:
          name: check rollout status
          command: kubectl rollout status deploy dex-k8s-authenticator -w
      - run:
          name: k8s resources
          command: kubectl get ing,svc,ep,deploy,pods
      - run:
          name: k8s describe deployment
          command: kubectl describe deployment dex-k8s-authenticator
      - run:
          name: test http connection
          command: | 
            sleep 5
            curl -Lsf "http://dex-k8s-authenticator.$(minikube ip).nip.io/login/my-cluster" > /tmp/output.html
      - run:
          name: test http result
          command: |
            cat /tmp/output.html
            grep "Log in to Your Account" /tmp/output.html                                                                                                               

workflows:
  version: 2
  test-suite:
    jobs:
      - golang_checks
      - helm_lint:
          requires:
            - dex_k8s_auth_gotests
      - k8s_lint:
          requires:
            - helm_lint
      - helm_e2e:
          requires:
            - k8s_lint